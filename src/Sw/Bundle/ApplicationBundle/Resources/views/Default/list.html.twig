{% extends 'SwApplicationBundle::layout.html.twig' %}

{% block content %}

<div class="row">
    <div>
        <form class="form-inline" id="form_search">
            <div class="form-group">
                <input type="search" class="form-control" placeholder="Entrez un code postal..." name="search" id="search_input" />
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-success" value="Valider" />
            </div>
        </form>
    </div>
    <hr />
    <div id="searchresults" class="list-group col-xs-5" style=""></div>
    <div class="col-xs-7">
        <div>
            <h2 id="sptitle"></h2>
            <ul class="nav nav-tabs" style="margin-bottom:15px;">
              <li class="active"><a href="#detail" data-toggle="tab" id="info_click">Informations</a></li>
              <li><a href="#commentsTab" data-toggle="tab" id="btnComments">Commentaires</a></li>
            </ul>
            <div class="tab-content">
              <div class="tab-pane active" id="detail">
                <div id="infos"></div>
              </div>
              <div id="commentsTab" class="tab-pane">
                {{form_start(commentForm, { 'attr': {'class': 'form', 'role' : 'form', 'id' : 'formComment'}})}}
                    <div class="form-group">
                        {{form_widget(commentForm.author, { 'attr': {'class': 'form-control', 'placeholder' : 'Pseudo'} })}}
                    </div>
                    <div class="form-group">
                        {{form_widget(commentForm.content, { 'attr': {'class': 'form-control isEmpty', 'rows' : '2', 'data-msg' : 'Entrez votre commentaire...'}, 'value' : 'Entrez votre commentaire...' })}}
                    </div>
                    <div class="pull-left">
                        <a href="#" class="note-star" id="note-star-1" data-note="1" style="font-size:18px; color:#fcdc12;"><span class="glyphicon glyphicon-star"></span></a>
                        <a href="#" class="note-star" id="note-star-2" data-note="2" style="font-size:18px; color:#fcdc12;"><span class="glyphicon glyphicon-star"></span></a>
                        <a href="#" class="note-star" id="note-star-3" data-note="3" style="font-size:18px; color:#fcdc12;"><span class="glyphicon glyphicon-star"></span></a>
                        <a href="#" class="note-star" id="note-star-4" data-note="4" style="font-size:18px; color:#fcdc12;"><span class="glyphicon glyphicon-star-empty"></span></a>
                        <a href="#" class="note-star" id="note-star-5" data-note="5" style="font-size:18px; color:#fcdc12;"><span class="glyphicon glyphicon-star-empty"></span></a>
                    </div>
                    <button type="submit" class="btn btn-success btn-small pull-right" ><span class="glyphicon glyphicon-envelope"></span> Envoyer</button>
                    <div style="clear:both;"></div>
                    {{form_end(commentForm)}}
                </form>
                <hr />
                <div id="comments"></div>
              </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
<script>
$( document ).ready(function() {

    var loadergif = '<img src="{{asset("images/ajax-loader.gif")}}" alt="Loading..." style="display: block; margin: auto;" />';

    function ajaxBridge(url, id, callback) {
        var block = $('#' + id);
        block.empty().append(loadergif);
        $.get( url, function (data) {
            block.empty();
            callback(data);
        })
        .fail(function () {
            block.empty().append('<div class="alert alert-danger"><p class="text-center">Une erreur est survenue !</p></div>')
        });
    }

    // textarea placeholder
    $("textarea").focus(function () {
        if ($(this).hasClass("isEmpty"))
            $(this).empty().removeClass("isEmpty").val('');
    });

    $("textarea").blur(function () {
        if ($.trim($(this).val()) == '')
            $(this).empty().addClass("isEmpty").val($(this).attr('data-msg'));
    });

    var $comments = $("#comments"),
        $formComment = $("#formComment"),
        $detail = $("#detail"),
        $infos = $("#infos"),
        currentId = null,
        urlSplit = null,
        lgth = null,
        urlToDetail = "{{path('sw_application_swimmingpools_show', { 'id': 0 }) }}",

        // Create the base url for detail url
        urlSplit = urlToDetail.split('/', -1);
        lgth = urlSplit.length-1;
        urlToDetail = '';
        for (var i=0; i<lgth; i++)
            urlToDetail += urlSplit[i] + '/';

        console.log(urlToDetail);

    // Show all
    ajaxBridge("{{path('sw_application_swimmingpools_list')}}", "searchresults", function (data) {showList(data)});


    // Onclick on an item of the list
    $("#searchresults").on("click", ".itemsp", function (e) {
        e.preventDefault();
        $(".itemsp").removeClass('active');
        $(this).addClass('active');

        currentId = $(this).attr("data-target");

        $("#form_swimmingPoolId").val(currentId); // set the spID to the comment form

        $('#info_click').tab('show'); // Show info tab

        // Load the detail of the swimmingpool
        ajaxBridge(urlToDetail + currentId, "infos", function(data) {
            var swimmingpool = data;

            $("#sptitle").text(swimmingpool.name);
            $infos.empty().append('<address>'+ swimmingpool.address + ' ' + swimmingpool.zip_code + '</address>');
            $infos.append('<div id="map" style="height:250px;"></div>');

            // create a map in the "map" div, set the view to a given place and zoom
            var map = L.map('map').setView([swimmingpool.latitude, swimmingpool.longitude], 13);

            // add an OpenStreetMap tile layer
            L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="http://osm.org/copyright">' + swimmingpool.name + '</a> contributors'
            }).addTo(map);

            // add a marker in the given location, attach some popup content to it and open the popup
            L.marker([swimmingpool.latitude, swimmingpool.longitude]).addTo(map)
                .bindPopup('<b>' + swimmingpool.name + '</b> ' + swimmingpool.address + ' ' +   swimmingpool.zip_code)
                .openPopup();

        });
    });

    // Load the comments
    $("#btnComments").click(function() {
        ajaxBridge("/SwimmingPoolParty/web/app_dev.php/swimming-pool/" + currentId + "/comment", "comments", function(data) {
            var comment = '';
            $(data).find('item').each( function () {
                var $this = $(this),
                    author = $this.find('author').text(),
                    content = $this.find('content').text(),
                    rank = parseInt($this.find('rank').text());

                comment += '<b>' + author + '</b>&nbsp;&nbsp;';
                for(var i=0; i<5; i++ )
                    comment += (i < rank) ? '<span class="glyphicon glyphicon-star"></span>' : '<span class="glyphicon glyphicon-star-empty"></span>';

                comment += '<p>' + content + '</p><hr />';
            });

            $comments.append(comment);
        });
    });

    // Note
    $("a.note-star").click(function (e) {
        e.preventDefault();
        var note = $(this).attr("data-note");
        $("#form_rank").val(note);
        $("a.note-star span").removeClass().addClass('glyphicon glyphicon-star-empty');

        for(var i=1; i<=note; i++ )
            $("#note-star-" + i + " span").removeClass().addClass('glyphicon glyphicon-star');
    });

    // submit comment
    $("#formComment").submit(function (e) {
        var $form = $(this),
            author = $("#form_author").val(),
            content = $("#form_content").val(),
            rank = $("#form_rank").val(),
            comment = "";

        e.preventDefault();
        $.ajax({
            type: "POST",
            url: $form.attr('action'),
            data: $form.serialize(),
            success: function (data, textStatus, jqXHR) {
                $form.after('<div class="alert alert-success"><p class="text-center">Commentaire post√© !</p></div>');
                $(".alert").delay(2000).fadeOut("slow", function() {
                    $(this).remove();
                });

                // add comment to the list :
                comment += '<b>' + author + '</b>&nbsp;&nbsp;';
                for(var i=0; i<5; i++ )
                    comment += (i < rank) ? '<span class="glyphicon glyphicon-star"></span>' : '<span class="glyphicon glyphicon-star-empty"></span>';
                comment += '<p>' + content + '</p><hr />';
                $comments.append(comment);
                $form[0].reset();
            }
        });
    });

    // Form search
    $("#form_search").submit(function (e) {
        e.preventDefault();
        var $form = $(this),
            search = $("#search_input").val();

        ajaxBridge("/SwimmingPoolParty/web/app_dev.php/swimming-pools/zipcode/" + search, "searchresults", function (data) {showList(data)});
    });

    function showList(data) {
        $.each(data, function(i, item) {
            $("#searchresults").append( '<a href="#" data-target="' + item.id + '" class="list-group-item itemsp"><h4 class="list-group-item-heading">' + item.name + '</h4><p class="list-group-item-text">' +  item.address + ' ' + item.zip_code + '</p></a>');
        });
        $("#searchresults .list-group-item:first").click();
    }

});
</script>

{% endblock %}
